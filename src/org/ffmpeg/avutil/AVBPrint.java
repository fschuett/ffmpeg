package org.ffmpeg.avutil;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavutil/bprint.h:7</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avutil") 
public class AVBPrint extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * < string so far<br>
	 * C type : char*
	 */
	@Field(0) 
	public Pointer<Byte > str() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * < string so far<br>
	 * C type : char*
	 */
	@Field(0) 
	public AVBPrint str(Pointer<Byte > str) {
		this.io.setPointerField(this, 0, str);
		return this;
	}
	/** < length so far */
	@Field(1) 
	public int len() {
		return this.io.getIntField(this, 1);
	}
	/** < length so far */
	@Field(1) 
	public AVBPrint len(int len) {
		this.io.setIntField(this, 1, len);
		return this;
	}
	/** < allocated memory */
	@Field(2) 
	public int size() {
		return this.io.getIntField(this, 2);
	}
	/** < allocated memory */
	@Field(2) 
	public AVBPrint size(int size) {
		this.io.setIntField(this, 2, size);
		return this;
	}
	/** < maximum allocated memory */
	@Field(3) 
	public int size_max() {
		return this.io.getIntField(this, 3);
	}
	/** < maximum allocated memory */
	@Field(3) 
	public AVBPrint size_max(int size_max) {
		this.io.setIntField(this, 3, size_max);
		return this;
	}
	/** C type : char[1] */
	@Array({1}) 
	@Field(4) 
	public Pointer<Byte > reserved_internal_buffer() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : char[1024 - 17] */
	@Array({1024 - 17}) 
	@Field(5) 
	public Pointer<Byte > reserved_padding() {
		return this.io.getPointerField(this, 5);
	}
	public AVBPrint() {
		super();
	}
	public AVBPrint(Pointer pointer) {
		super(pointer);
	}
}
