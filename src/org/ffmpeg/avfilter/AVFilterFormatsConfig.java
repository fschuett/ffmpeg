package org.ffmpeg.avfilter;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavfilter/avfilter.h:306</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avfilter") 
public class AVFilterFormatsConfig extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * List of supported formats (pixel or sample).<br>
	 * C type : AVFilterFormats*
	 */
	@Field(0) 
	public Pointer<AVFilterFormats > formats() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * List of supported formats (pixel or sample).<br>
	 * C type : AVFilterFormats*
	 */
	@Field(0) 
	public AVFilterFormatsConfig formats(Pointer<AVFilterFormats > formats) {
		this.io.setPointerField(this, 0, formats);
		return this;
	}
	/**
	 * Lists of supported sample rates, only for audio.<br>
	 * C type : AVFilterFormats*
	 */
	@Field(1) 
	public Pointer<AVFilterFormats > samplerates() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * Lists of supported sample rates, only for audio.<br>
	 * C type : AVFilterFormats*
	 */
	@Field(1) 
	public AVFilterFormatsConfig samplerates(Pointer<AVFilterFormats > samplerates) {
		this.io.setPointerField(this, 1, samplerates);
		return this;
	}
	/**
	 * Lists of supported channel layouts, only for audio.<br>
	 * C type : AVFilterChannelLayouts*
	 */
	@Field(2) 
	public Pointer<AVFilterChannelLayouts > channel_layouts() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * Lists of supported channel layouts, only for audio.<br>
	 * C type : AVFilterChannelLayouts*
	 */
	@Field(2) 
	public AVFilterFormatsConfig channel_layouts(Pointer<AVFilterChannelLayouts > channel_layouts) {
		this.io.setPointerField(this, 2, channel_layouts);
		return this;
	}
	public AVFilterFormatsConfig() {
		super();
	}
	public AVFilterFormatsConfig(Pointer pointer) {
		super(pointer);
	}
}
