package org.ffmpeg.avfilter;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : libavfilter/avfilter.h:698</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avfilter") 
public class AVFilterInOut extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * unique name for this input/output in the list<br>
	 * C type : char*
	 */
	@Field(0) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * unique name for this input/output in the list<br>
	 * C type : char*
	 */
	@Field(0) 
	public AVFilterInOut name(Pointer<Byte > name) {
		this.io.setPointerField(this, 0, name);
		return this;
	}
	/**
	 * filter context associated to this input/output<br>
	 * C type : AVFilterContext*
	 */
	@Field(1) 
	public Pointer<AVFilterContext > filter_ctx() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * filter context associated to this input/output<br>
	 * C type : AVFilterContext*
	 */
	@Field(1) 
	public AVFilterInOut filter_ctx(Pointer<AVFilterContext > filter_ctx) {
		this.io.setPointerField(this, 1, filter_ctx);
		return this;
	}
	/** index of the filt_ctx pad to use for linking */
	@Field(2) 
	public int pad_idx() {
		return this.io.getIntField(this, 2);
	}
	/** index of the filt_ctx pad to use for linking */
	@Field(2) 
	public AVFilterInOut pad_idx(int pad_idx) {
		this.io.setIntField(this, 2, pad_idx);
		return this;
	}
	/**
	 * next input/input in the list, NULL if this is the last<br>
	 * C type : AVFilterInOut*
	 */
	@Field(3) 
	public Pointer<AVFilterInOut > next() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * next input/input in the list, NULL if this is the last<br>
	 * C type : AVFilterInOut*
	 */
	@Field(3) 
	public AVFilterInOut next(Pointer<AVFilterInOut > next) {
		this.io.setPointerField(this, 3, next);
		return this;
	}
	public AVFilterInOut() {
		super();
	}
	public AVFilterInOut(Pointer pointer) {
		super(pointer);
	}
}
