diff -pruN csrc.orig/libavcodec/avcodec.h csrc/libavcodec/avcodec.h
--- csrc.orig/libavcodec/avcodec.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavcodec/avcodec.h	2018-10-03 08:33:18.486159990 +0200
@@ -1455,7 +1455,6 @@ typedef struct AVPacket {
      * for Matroska subtitles, whose duration values could overflow when the
      * duration field was still an int.
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 } AVPacket;
@@ -1787,7 +1786,7 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
+    
     int b_frame_strategy;
 #endif
 
@@ -1808,7 +1807,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int mpeg_quant;
 #endif
 
@@ -1872,7 +1870,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
      int prediction_method;
 #define FF_PRED_LEFT   0
 #define FF_PRED_PLANE  1
@@ -1953,7 +1950,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int pre_me;
 #endif
 
@@ -2023,11 +2019,9 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int scenechange_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int noise_reduction;
 #endif
 
@@ -2070,7 +2064,6 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int me_penalty_compensation;
 #endif
 
@@ -2082,7 +2075,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int brd_scale;
 #endif
 
@@ -2102,7 +2094,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int chromaoffset;
 #endif
 
@@ -2115,7 +2106,6 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int b_sensitivity;
 #endif
 
@@ -2340,7 +2330,6 @@ typedef struct AVCodecContext {
      * - encoding: unused
      * - decoding: set by the caller before avcodec_open2().
      */
-    attribute_deprecated
     int refcounted_frames;
 
     /* - encoding parameters */
@@ -2426,31 +2415,29 @@ typedef struct AVCodecContext {
     /**
      * @deprecated use encoder private options instead
      */
-    attribute_deprecated
     int coder_type;
 #endif /* FF_API_CODER_TYPE */
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int context_model;
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
+    
     int frame_skip_threshold;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
+    
     int frame_skip_factor;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
+    
     int frame_skip_exp;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
+    
     int frame_skip_cmp;
 #endif /* FF_API_PRIVATE_OPT */
 
@@ -2463,15 +2450,12 @@ typedef struct AVCodecContext {
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int min_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int max_prediction_order;
 
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int64_t timecode_frame_start;
 #endif
 
@@ -2485,13 +2469,11 @@ typedef struct AVCodecContext {
     /* with a Start Code (it should). H.263 does.   */
     /* mb_nb contains the number of macroblocks     */
     /* encoded in the RTP payload.                  */
-    attribute_deprecated
     void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);
 #endif
 
 #if FF_API_PRIVATE_OPT
     /** @deprecated use encoder private options instead */
-    attribute_deprecated
     int rtp_payload_size;   /* The size of the RTP payload: the coder will  */
                             /* do its best to deliver a chunk with size     */
                             /* below rtp_payload_size, the chunk will start */
@@ -2502,25 +2484,16 @@ typedef struct AVCodecContext {
 
 #if FF_API_STAT_BITS
     /* statistics, used for 2-pass encoding */
-    attribute_deprecated
     int mv_bits;
-    attribute_deprecated
     int header_bits;
-    attribute_deprecated
     int i_tex_bits;
-    attribute_deprecated
     int p_tex_bits;
-    attribute_deprecated
     int i_count;
-    attribute_deprecated
     int p_count;
-    attribute_deprecated
     int skip_count;
-    attribute_deprecated
     int misc_bits;
 
     /** @deprecated this field is unused */
-    attribute_deprecated
     int frame_bits;
 #endif
 
@@ -2757,7 +2730,7 @@ typedef struct AVCodecContext {
      *
      * @deprecated use the quality factor packet side data instead
      */
-    attribute_deprecated AVFrame *coded_frame;
+    AVFrame *coded_frame;
 #endif
 
     /**
@@ -2994,7 +2967,6 @@ typedef struct AVCodecContext {
      * @deprecated this value is now exported as a part of
      * AV_PKT_DATA_CPB_PROPERTIES packet side data
      */
-    attribute_deprecated
     uint64_t vbv_delay;
 #endif
 
@@ -3009,7 +2981,6 @@ typedef struct AVCodecContext {
      * @deprecated this field disables the default behaviour and
      *             it is kept only for compatibility.
      */
-    attribute_deprecated
     int side_data_only_packets;
 #endif
 
@@ -3304,34 +3275,34 @@ typedef struct AVCodecContext {
  * Accessors for some AVCodecContext fields. These used to be provided for ABI
  * compatibility, and do not need to be used anymore.
  */
-attribute_deprecated
+
 AVRational av_codec_get_pkt_timebase         (const AVCodecContext *avctx);
-attribute_deprecated
+
 void       av_codec_set_pkt_timebase         (AVCodecContext *avctx, AVRational val);
 
-attribute_deprecated
+
 const AVCodecDescriptor *av_codec_get_codec_descriptor(const AVCodecContext *avctx);
-attribute_deprecated
+
 void                     av_codec_set_codec_descriptor(AVCodecContext *avctx, const AVCodecDescriptor *desc);
 
-attribute_deprecated
+
 unsigned av_codec_get_codec_properties(const AVCodecContext *avctx);
 
 #if FF_API_LOWRES
-attribute_deprecated
+
 int  av_codec_get_lowres(const AVCodecContext *avctx);
-attribute_deprecated
+
 void av_codec_set_lowres(AVCodecContext *avctx, int val);
 #endif
 
-attribute_deprecated
+
 int  av_codec_get_seek_preroll(const AVCodecContext *avctx);
-attribute_deprecated
+
 void av_codec_set_seek_preroll(AVCodecContext *avctx, int val);
 
-attribute_deprecated
+
 uint16_t *av_codec_get_chroma_intra_matrix(const AVCodecContext *avctx);
-attribute_deprecated
+
 void av_codec_set_chroma_intra_matrix(AVCodecContext *avctx, uint16_t *val);
 #endif
 
@@ -3550,7 +3521,7 @@ typedef struct AVCodec {
 } AVCodec;
 
 #if FF_API_CODEC_GET_SET
-attribute_deprecated
+
 int av_codec_get_max_lowres(const AVCodec *codec);
 #endif
 
@@ -3791,9 +3762,7 @@ typedef struct AVHWAccel {
  * @deprecated use AVFrame or imgutils functions instead
  */
 typedef struct AVPicture {
-    attribute_deprecated
     uint8_t *data[AV_NUM_DATA_POINTERS];    ///< pointers to the image data planes
-    attribute_deprecated
     int linesize[AV_NUM_DATA_POINTERS];     ///< number of bytes per line
 } AVPicture;
 
@@ -3833,7 +3802,6 @@ typedef struct AVSubtitleRect {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     AVPicture pict;
 #endif
     /**
@@ -4041,7 +4009,7 @@ const AVCodec *av_codec_iterate(void **o
  * if c is non-NULL, returns the next registered codec after c,
  * or NULL if c is the last one.
  */
-attribute_deprecated
+
 AVCodec *av_codec_next(const AVCodec *c);
 #endif
 
@@ -4069,7 +4037,7 @@ const char *avcodec_license(void);
  *
  * @see avcodec_register_all()
  */
-attribute_deprecated
+
 void avcodec_register(AVCodec *codec);
 
 /**
@@ -4082,7 +4050,7 @@ void avcodec_register(AVCodec *codec);
  * @see av_register_codec_parser
  * @see av_register_bitstream_filter
  */
-attribute_deprecated
+
 void avcodec_register_all(void);
 #endif
 
@@ -4158,7 +4126,6 @@ const AVClass *avcodec_get_subtitle_rect
  * avcodec_parameters_from_context() / avcodec_parameters_to_context()
  * functions.
  */
-attribute_deprecated
 int avcodec_copy_context(AVCodecContext *dest, const AVCodecContext *src);
 #endif
 
@@ -4367,7 +4334,7 @@ int av_packet_from_data(AVPacket *pkt, u
  *
  * @deprecated Use av_packet_ref or av_packet_make_refcounted
  */
-attribute_deprecated
+
 int av_dup_packet(AVPacket *pkt);
 /**
  * Copy packet, including contents
@@ -4376,7 +4343,6 @@ int av_dup_packet(AVPacket *pkt);
  *
  * @deprecated Use av_packet_ref
  */
-attribute_deprecated
 int av_copy_packet(AVPacket *dst, const AVPacket *src);
 
 /**
@@ -4386,7 +4352,6 @@ int av_copy_packet(AVPacket *dst, const
  *
  * @deprecated Use av_packet_copy_props
  */
-attribute_deprecated
 int av_copy_packet_side_data(AVPacket *dst, const AVPacket *src);
 
 /**
@@ -4396,7 +4361,6 @@ int av_copy_packet_side_data(AVPacket *d
  *
  * @param pkt packet to free
  */
-attribute_deprecated
 void av_free_packet(AVPacket *pkt);
 #endif
 /**
@@ -4449,10 +4413,8 @@ uint8_t* av_packet_get_side_data(const A
                                  int *size);
 
 #if FF_API_MERGE_SD_API
-attribute_deprecated
 int av_packet_merge_side_data(AVPacket *pkt);
 
-attribute_deprecated
 int av_packet_split_side_data(AVPacket *pkt);
 #endif
 
@@ -4702,7 +4664,6 @@ enum AVChromaLocation avcodec_chroma_pos
  *
 * @deprecated Use avcodec_send_packet() and avcodec_receive_frame().
  */
-attribute_deprecated
 int avcodec_decode_audio4(AVCodecContext *avctx, AVFrame *frame,
                           int *got_frame_ptr, const AVPacket *avpkt);
 
@@ -4751,7 +4712,6 @@ int avcodec_decode_audio4(AVCodecContext
  *
  * @deprecated Use avcodec_send_packet() and avcodec_receive_frame().
  */
-attribute_deprecated
 int avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture,
                          int *got_picture_ptr,
                          const AVPacket *avpkt);
@@ -5084,7 +5044,6 @@ typedef struct AVCodecParserContext {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     int64_t convergence_duration;
 #endif
 
@@ -5222,10 +5181,10 @@ typedef struct AVCodecParser {
  */
 const AVCodecParser *av_parser_iterate(void **opaque);
 
-attribute_deprecated
+
 AVCodecParser *av_parser_next(const AVCodecParser *c);
 
-attribute_deprecated
+
 void av_register_codec_parser(AVCodecParser *parser);
 AVCodecParserContext *av_parser_init(int codec_id);
 
@@ -5343,7 +5302,6 @@ AVCodec *avcodec_find_encoder_by_name(co
  *
  * @deprecated use avcodec_send_frame()/avcodec_receive_packet() instead
  */
-attribute_deprecated
 int avcodec_encode_audio2(AVCodecContext *avctx, AVPacket *avpkt,
                           const AVFrame *frame, int *got_packet_ptr);
 
@@ -5382,7 +5340,6 @@ int avcodec_encode_audio2(AVCodecContext
  *
  * @deprecated use avcodec_send_frame()/avcodec_receive_packet() instead
  */
-attribute_deprecated
 int avcodec_encode_video2(AVCodecContext *avctx, AVPacket *avpkt,
                           const AVFrame *frame, int *got_packet_ptr);
 
@@ -5403,26 +5360,22 @@ int avcodec_encode_subtitle(AVCodecConte
 /**
  * @deprecated unused
  */
-attribute_deprecated
 int avpicture_alloc(AVPicture *picture, enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
 void avpicture_free(AVPicture *picture);
 
 /**
  * @deprecated use av_image_fill_arrays() instead.
  */
-attribute_deprecated
 int avpicture_fill(AVPicture *picture, const uint8_t *ptr,
                    enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated use av_image_copy_to_buffer() instead.
  */
-attribute_deprecated
 int avpicture_layout(const AVPicture *src, enum AVPixelFormat pix_fmt,
                      int width, int height,
                      unsigned char *dest, int dest_size);
@@ -5430,27 +5383,27 @@ int avpicture_layout(const AVPicture *sr
 /**
  * @deprecated use av_image_get_buffer_size() instead.
  */
-attribute_deprecated
+
 int avpicture_get_size(enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated av_image_copy() instead.
  */
-attribute_deprecated
+
 void av_picture_copy(AVPicture *dst, const AVPicture *src,
                      enum AVPixelFormat pix_fmt, int width, int height);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
+
 int av_picture_crop(AVPicture *dst, const AVPicture *src,
                     enum AVPixelFormat pix_fmt, int top_band, int left_band);
 
 /**
  * @deprecated unused
  */
-attribute_deprecated
+
 int av_picture_pad(AVPicture *dst, const AVPicture *src, int height, int width, enum AVPixelFormat pix_fmt,
             int padtop, int padbottom, int padleft, int padright, int *color);
 
@@ -5480,7 +5433,6 @@ int av_picture_pad(AVPicture *dst, const
  * @deprecated Use av_pix_fmt_get_chroma_sub_sample
  */
 
-attribute_deprecated
 void avcodec_get_chroma_sub_sample(enum AVPixelFormat pix_fmt, int *h_shift, int *v_shift);
 #endif
 
@@ -5524,7 +5476,6 @@ enum AVPixelFormat avcodec_find_best_pix
 enum AVPixelFormat avcodec_find_best_pix_fmt_of_2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
 
-attribute_deprecated
 enum AVPixelFormat avcodec_find_best_pix_fmt2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
 
@@ -5546,7 +5497,6 @@ enum AVPixelFormat avcodec_default_get_f
  *
  * @deprecated see av_fourcc_make_string() and av_fourcc2str().
  */
-attribute_deprecated
 size_t av_get_codec_tag_string(char *buf, size_t buf_size, unsigned int codec_tag);
 #endif
 
@@ -5773,21 +5723,18 @@ typedef struct AVBitStreamFilter {
  * @deprecated the old bitstream filtering API (using AVBitStreamFilterContext)
  * is deprecated. Use the new bitstream filtering API (using AVBSFContext).
  */
-attribute_deprecated
 void av_register_bitstream_filter(AVBitStreamFilter *bsf);
 /**
  * @deprecated the old bitstream filtering API (using AVBitStreamFilterContext)
  * is deprecated. Use av_bsf_get_by_name(), av_bsf_alloc(), and av_bsf_init()
  * from the new bitstream filtering API (using AVBSFContext).
  */
-attribute_deprecated
 AVBitStreamFilterContext *av_bitstream_filter_init(const char *name);
 /**
  * @deprecated the old bitstream filtering API (using AVBitStreamFilterContext)
  * is deprecated. Use av_bsf_send_packet() and av_bsf_receive_packet() from the
  * new bitstream filtering API (using AVBSFContext).
  */
-attribute_deprecated
 int av_bitstream_filter_filter(AVBitStreamFilterContext *bsfc,
                                AVCodecContext *avctx, const char *args,
                                uint8_t **poutbuf, int *poutbuf_size,
@@ -5797,14 +5744,13 @@ int av_bitstream_filter_filter(AVBitStre
  * is deprecated. Use av_bsf_free() from the new bitstream filtering API (using
  * AVBSFContext).
  */
-attribute_deprecated
 void av_bitstream_filter_close(AVBitStreamFilterContext *bsf);
 /**
  * @deprecated the old bitstream filtering API (using AVBitStreamFilterContext)
  * is deprecated. Use av_bsf_iterate() from the new bitstream filtering API (using
  * AVBSFContext).
  */
-attribute_deprecated
+
 const AVBitStreamFilter *av_bitstream_filter_next(const AVBitStreamFilter *f);
 #endif
 
@@ -5825,7 +5771,7 @@ const AVBitStreamFilter *av_bsf_get_by_n
  */
 const AVBitStreamFilter *av_bsf_iterate(void **opaque);
 #if FF_API_NEXT
-attribute_deprecated
+
 const AVBitStreamFilter *av_bsf_next(void **opaque);
 #endif
 
@@ -6023,7 +5969,7 @@ unsigned int av_xiphlacing(unsigned char
  *
  * @deprecated  This function doesn't do anything.
  */
-attribute_deprecated
+
 void av_register_hwaccel(AVHWAccel *hwaccel);
 
 /**
@@ -6034,7 +5980,7 @@ void av_register_hwaccel(AVHWAccel *hwac
  * @deprecated  AVHWaccel structures contain no user-serviceable parts, so
  *              this function should not be used.
  */
-attribute_deprecated
+
 AVHWAccel *av_hwaccel_next(const AVHWAccel *hwaccel);
 #endif
 
@@ -6077,7 +6023,7 @@ enum AVLockOp {
  * @deprecated This function does nothing, and always returns 0. Be sure to
  *             build with thread support to get basic thread safety.
  */
-attribute_deprecated
+
 int av_lockmgr_register(int (*cb)(void **mutex, enum AVLockOp op));
 #endif
 
diff -pruN csrc.orig/libavcodec/vaapi.h csrc/libavcodec/vaapi.h
--- csrc.orig/libavcodec/vaapi.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavcodec/vaapi.h	2018-10-03 08:33:18.470160071 +0200
@@ -53,7 +53,7 @@
  *
  * Deprecated: use AVCodecContext.hw_frames_ctx instead.
  */
-struct attribute_deprecated vaapi_context {
+struct vaapi_context {
     /**
      * Window system dependent data
      *
diff -pruN csrc.orig/libavcodec/vdpau.h csrc/libavcodec/vdpau.h
--- csrc.orig/libavcodec/vdpau.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavcodec/vdpau.h	2018-10-03 08:33:18.490159970 +0200
@@ -167,7 +167,6 @@ AVVDPAUContext *av_vdpau_alloc_context(v
  *
  * @return 0 on success (non-negative), a negative AVERROR on failure.
  */
-attribute_deprecated
 int av_vdpau_get_profile(AVCodecContext *avctx, VdpDecoderProfile *profile);
 #endif
 
diff -pruN csrc.orig/libavcodec/xvmc.h csrc/libavcodec/xvmc.h
--- csrc.orig/libavcodec/xvmc.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavcodec/xvmc.h	2018-10-03 08:33:18.486159990 +0200
@@ -43,7 +43,7 @@
 #define AV_XVMC_ID                    0x1DC711C0  /**< special value to ensure that regular pixel routines haven't corrupted the struct
                                                        the number is 1337 speak for the letters IDCT MCo (motion compensation) */
 
-struct attribute_deprecated xvmc_pix_fmt {
+struct xvmc_pix_fmt {
     /** The field contains the special constant value AV_XVMC_ID.
         It is used as a test that the application correctly uses the API,
         and that there is no corruption caused by pixel routines.
diff -pruN csrc.orig/libavfilter/avfilter.h csrc/libavfilter/avfilter.h
--- csrc.orig/libavfilter/avfilter.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavfilter/avfilter.h	2018-10-03 08:33:18.462160111 +0200
@@ -668,7 +668,7 @@ void avfilter_link_free(AVFilterLink **l
  * Get the number of channels of a link.
  * @deprecated Use av_buffersink_get_channels()
  */
-attribute_deprecated
+
 int avfilter_link_get_channels(AVFilterLink *link);
 #endif
 
@@ -677,7 +677,6 @@ int avfilter_link_get_channels(AVFilterL
  * @deprecated applications are not supposed to mess with links, they should
  * close the sinks.
  */
-attribute_deprecated
 void avfilter_link_set_closed(AVFilterLink *link, int closed);
 
 /**
@@ -710,7 +709,7 @@ const AVFilter *av_filter_iterate(void *
 
 #if FF_API_NEXT
 /** Initialize the filter system. Register all builtin filters. */
-attribute_deprecated
+
 void avfilter_register_all(void);
 
 /**
@@ -723,7 +722,7 @@ void avfilter_register_all(void);
  * @return 0 if the registration was successful, a negative value
  * otherwise
  */
-attribute_deprecated
+
 int avfilter_register(AVFilter *filter);
 
 /**
@@ -731,7 +730,7 @@ int avfilter_register(AVFilter *filter);
  * @return If prev is non-NULL, next registered filter after prev or NULL if
  * prev is the last filter. If prev is NULL, return the first registered filter.
  */
-attribute_deprecated
+
 const AVFilter *avfilter_next(const AVFilter *prev);
 #endif
 
@@ -844,7 +843,7 @@ typedef struct AVFilterGraph {
 
     char *scale_sws_opts; ///< sws options to use for the auto-inserted scale filters
 #if FF_API_LAVR_OPTS
-    attribute_deprecated char *resample_lavr_opts;   ///< libavresample options to use for the auto-inserted resample filters
+    char *resample_lavr_opts;   ///< libavresample options to use for the auto-inserted resample filters
 #endif
 
     /**
diff -pruN csrc.orig/libavformat/avformat.h csrc/libavformat/avformat.h
--- csrc.orig/libavformat/avformat.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavformat/avformat.h	2018-10-03 08:33:18.446160192 +0200
@@ -873,7 +873,6 @@ typedef struct AVStream {
     /**
      * @deprecated use the codecpar struct instead
      */
-    attribute_deprecated
     AVCodecContext *codec;
 #endif
     void *priv_data;
@@ -995,7 +994,7 @@ typedef struct AVStream {
      *
      * @deprecated unused
      */
-    attribute_deprecated
+    
     char *recommended_encoder_configuration;
 #endif
 
@@ -1219,14 +1218,14 @@ typedef struct AVStream {
  * Accessors for some AVStream fields. These used to be provided for ABI
  * compatibility, and do not need to be used anymore.
  */
-attribute_deprecated
+
 AVRational av_stream_get_r_frame_rate(const AVStream *s);
-attribute_deprecated
+
 void       av_stream_set_r_frame_rate(AVStream *s, AVRational r);
 #if FF_API_LAVF_FFSERVER
-attribute_deprecated
+
 char* av_stream_get_recommended_encoder_configuration(const AVStream *s);
-attribute_deprecated
+
 void  av_stream_set_recommended_encoder_configuration(AVStream *s, char *configuration);
 #endif
 #endif
@@ -1404,7 +1403,7 @@ typedef struct AVFormatContext {
      *
      * @deprecated Use url instead.
      */
-    attribute_deprecated
+    
     char filename[1024];
 #endif
 
@@ -1874,7 +1873,6 @@ typedef struct AVFormatContext {
      *
      * @deprecated Use io_open and io_close.
      */
-    attribute_deprecated
     int (*open_cb)(struct AVFormatContext *s, AVIOContext **p, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options);
 #endif
 
@@ -1933,39 +1931,39 @@ typedef struct AVFormatContext {
  * Accessors for some AVFormatContext fields. These used to be provided for ABI
  * compatibility, and do not need to be used anymore.
  */
-attribute_deprecated
+
 int av_format_get_probe_score(const AVFormatContext *s);
-attribute_deprecated
+
 AVCodec * av_format_get_video_codec(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_video_codec(AVFormatContext *s, AVCodec *c);
-attribute_deprecated
+
 AVCodec * av_format_get_audio_codec(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_audio_codec(AVFormatContext *s, AVCodec *c);
-attribute_deprecated
+
 AVCodec * av_format_get_subtitle_codec(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_subtitle_codec(AVFormatContext *s, AVCodec *c);
-attribute_deprecated
+
 AVCodec * av_format_get_data_codec(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_data_codec(AVFormatContext *s, AVCodec *c);
-attribute_deprecated
+
 int       av_format_get_metadata_header_padding(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_metadata_header_padding(AVFormatContext *s, int c);
-attribute_deprecated
+
 void *    av_format_get_opaque(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_opaque(AVFormatContext *s, void *opaque);
-attribute_deprecated
+
 av_format_control_message av_format_get_control_message_cb(const AVFormatContext *s);
-attribute_deprecated
+
 void      av_format_set_control_message_cb(AVFormatContext *s, av_format_control_message callback);
 #if FF_API_OLD_OPEN_CALLBACKS
-attribute_deprecated AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
-attribute_deprecated void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
+AVOpenCallback av_format_get_open_cb(const AVFormatContext *s);
+void av_format_set_open_cb(AVFormatContext *s, AVOpenCallback callback);
 #endif
 #endif
 
@@ -2021,12 +2019,12 @@ const char *avformat_license(void);
  * @see av_register_input_format()
  * @see av_register_output_format()
  */
-attribute_deprecated
+
 void av_register_all(void);
 
-attribute_deprecated
+
 void av_register_input_format(AVInputFormat *format);
-attribute_deprecated
+
 void av_register_output_format(AVOutputFormat *format);
 #endif
 
@@ -2058,7 +2056,7 @@ int avformat_network_deinit(void);
  * if f is non-NULL, returns the next registered input format after f
  * or NULL if f is the last one.
  */
-attribute_deprecated
+
 AVInputFormat  *av_iformat_next(const AVInputFormat  *f);
 
 /**
@@ -2066,7 +2064,7 @@ AVInputFormat  *av_iformat_next(const AV
  * if f is non-NULL, returns the next registered output format after f
  * or NULL if f is the last one.
  */
-attribute_deprecated
+
 AVOutputFormat *av_oformat_next(const AVOutputFormat *f);
 #endif
 
@@ -2286,7 +2284,6 @@ int av_probe_input_buffer(AVIOContext *p
  */
 int avformat_open_input(AVFormatContext **ps, const char *url, AVInputFormat *fmt, AVDictionary **options);
 
-attribute_deprecated
 int av_demuxer_open(AVFormatContext *ic);
 
 /**
@@ -3025,7 +3022,6 @@ int avformat_queue_attached_pictures(AVF
  * @return  >=0 on success;
  *          AVERROR code on failure
  */
-attribute_deprecated
 int av_apply_bitstream_filters(AVCodecContext *codec, AVPacket *pkt,
                                AVBitStreamFilterContext *bsfc);
 #endif
diff -pruN csrc.orig/libavresample/avresample.h csrc/libavresample/avresample.h
--- csrc.orig/libavresample/avresample.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavresample/avresample.h	2018-10-03 08:33:18.502159910 +0200
@@ -109,7 +109,7 @@ typedef struct AVAudioResampleContext AV
  * @deprecated use libswresample
  *
  * Mixing Coefficient Types */
-enum attribute_deprecated AVMixCoeffType {
+enum AVMixCoeffType {
     AV_MIX_COEFF_TYPE_Q8,   /** 16-bit 8.8 fixed-point                      */
     AV_MIX_COEFF_TYPE_Q15,  /** 32-bit 17.15 fixed-point                    */
     AV_MIX_COEFF_TYPE_FLT,  /** floating-point                              */
@@ -120,7 +120,7 @@ enum attribute_deprecated AVMixCoeffType
  * @deprecated use libswresample
  *
  * Resampling Filter Types */
-enum attribute_deprecated AVResampleFilterType {
+enum AVResampleFilterType {
     AV_RESAMPLE_FILTER_TYPE_CUBIC,              /**< Cubic */
     AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL,   /**< Blackman Nuttall Windowed Sinc */
     AV_RESAMPLE_FILTER_TYPE_KAISER,             /**< Kaiser Windowed Sinc */
@@ -129,7 +129,7 @@ enum attribute_deprecated AVResampleFilt
 /**
  * @deprecated use libswresample
  */
-enum attribute_deprecated AVResampleDitherMethod {
+enum AVResampleDitherMethod {
     AV_RESAMPLE_DITHER_NONE,            /**< Do not use dithering */
     AV_RESAMPLE_DITHER_RECTANGULAR,     /**< Rectangular Dither */
     AV_RESAMPLE_DITHER_TRIANGULAR,      /**< Triangular Dither*/
@@ -144,7 +144,7 @@ enum attribute_deprecated AVResampleDith
  *
  * Return the LIBAVRESAMPLE_VERSION_INT constant.
  */
-attribute_deprecated
+
 unsigned avresample_version(void);
 
 /**
@@ -154,7 +154,7 @@ unsigned avresample_version(void);
  * Return the libavresample build-time configuration.
  * @return  configure string
  */
-attribute_deprecated
+
 const char *avresample_configuration(void);
 
 /**
@@ -163,7 +163,7 @@ const char *avresample_configuration(voi
  *
  * Return the libavresample license.
  */
-attribute_deprecated
+
 const char *avresample_license(void);
 
 /**
@@ -179,7 +179,7 @@ const char *avresample_license(void);
  *
  * @return AVClass for AVAudioResampleContext
  */
-attribute_deprecated
+
 const AVClass *avresample_get_class(void);
 
 /**
@@ -190,7 +190,7 @@ const AVClass *avresample_get_class(void
  *
  * @return  allocated audio resample context, or NULL on failure
  */
-attribute_deprecated
+
 AVAudioResampleContext *avresample_alloc_context(void);
 
 /**
@@ -210,7 +210,7 @@ AVAudioResampleContext *avresample_alloc
  * @param avr  audio resample context
  * @return     0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_open(AVAudioResampleContext *avr);
 
 /**
@@ -222,7 +222,7 @@ int avresample_open(AVAudioResampleConte
  * @param avr AVAudioResampleContext to check
  * @return 1 if avr is open, 0 if avr is closed.
  */
-attribute_deprecated
+
 int avresample_is_open(AVAudioResampleContext *avr);
 
 /**
@@ -241,7 +241,7 @@ int avresample_is_open(AVAudioResampleCo
  *
  * @param avr  audio resample context
  */
-attribute_deprecated
+
 void avresample_close(AVAudioResampleContext *avr);
 
 /**
@@ -254,7 +254,7 @@ void avresample_close(AVAudioResampleCon
  *
  * @param avr  audio resample context
  */
-attribute_deprecated
+
 void avresample_free(AVAudioResampleContext **avr);
 
 /**
@@ -282,7 +282,7 @@ void avresample_free(AVAudioResampleCont
  * @param matrix_encoding     matrixed stereo downmix mode (e.g. dplii)
  * @return                    0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_build_matrix(uint64_t in_layout, uint64_t out_layout,
                             double center_mix_level, double surround_mix_level,
                             double lfe_mix_level, int normalize, double *matrix,
@@ -303,7 +303,7 @@ int avresample_build_matrix(uint64_t in_
  * @param stride  distance between adjacent input channels in the matrix array
  * @return        0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_get_matrix(AVAudioResampleContext *avr, double *matrix,
                           int stride);
 
@@ -328,7 +328,7 @@ int avresample_get_matrix(AVAudioResampl
  * @param stride  distance between adjacent input channels in the matrix array
  * @return        0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_set_matrix(AVAudioResampleContext *avr, const double *matrix,
                           int stride);
 
@@ -362,7 +362,7 @@ int avresample_set_matrix(AVAudioResampl
  * @param channel_map customized input channel mapping
  * @return            0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_set_channel_mapping(AVAudioResampleContext *avr,
                                    const int *channel_map);
 
@@ -382,7 +382,7 @@ int avresample_set_channel_mapping(AVAud
  * @param compensation_distance  compensation distance, in samples
  * @return                       0 on success, negative AVERROR code on failure
  */
-attribute_deprecated
+
 int avresample_set_compensation(AVAudioResampleContext *avr, int sample_delta,
                                 int compensation_distance);
 
@@ -399,7 +399,7 @@ int avresample_set_compensation(AVAudioR
  * @return              number of samples or AVERROR(EINVAL) if the value
  *                      would exceed INT_MAX
  */
-attribute_deprecated
+
 int avresample_get_out_samples(AVAudioResampleContext *avr, int in_nb_samples);
 
 /**
@@ -447,7 +447,7 @@ int avresample_get_out_samples(AVAudioRe
  *                        not including converted samples added to the internal
  *                        output FIFO
  */
-attribute_deprecated
+
 int avresample_convert(AVAudioResampleContext *avr, uint8_t **output,
                        int out_plane_size, int out_samples,
                        uint8_t * const *input, int in_plane_size,
@@ -469,7 +469,7 @@ int avresample_convert(AVAudioResampleCo
  * @param avr  audio resample context
  * @return     number of samples currently in the resampling delay buffer
  */
-attribute_deprecated
+
 int avresample_get_delay(AVAudioResampleContext *avr);
 
 /**
@@ -490,7 +490,7 @@ int avresample_get_delay(AVAudioResample
  * @param avr  audio resample context
  * @return     number of samples available for reading
  */
-attribute_deprecated
+
 int avresample_available(AVAudioResampleContext *avr);
 
 /**
@@ -513,7 +513,7 @@ int avresample_available(AVAudioResample
  * @param nb_samples  number of samples to read from the FIFO
  * @return            the number of samples written to output
  */
-attribute_deprecated
+
 int avresample_read(AVAudioResampleContext *avr, uint8_t **output, int nb_samples);
 
 /**
@@ -563,7 +563,7 @@ int avresample_read(AVAudioResampleConte
  * @return                0 on success, AVERROR on failure or nonmatching
  *                        configuration.
  */
-attribute_deprecated
+
 int avresample_convert_frame(AVAudioResampleContext *avr,
                              AVFrame *output, AVFrame *input);
 
@@ -585,7 +585,7 @@ int avresample_convert_frame(AVAudioResa
  * @param in              input AVFrame
  * @return                0 on success, AVERROR on failure.
  */
-attribute_deprecated
+
 int avresample_config(AVAudioResampleContext *avr, AVFrame *out, AVFrame *in);
 
 /**
diff -pruN csrc.orig/libavutil/attributes.h csrc/libavutil/attributes.h
--- csrc.orig/libavutil/attributes.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavutil/attributes.h	2018-10-03 08:33:18.358160633 +0200
@@ -90,14 +90,6 @@
 #    define av_flatten
 #endif
 
-#if AV_GCC_VERSION_AT_LEAST(3,1)
-#    define attribute_deprecated __attribute__((deprecated))
-#elif defined(_MSC_VER)
-#    define attribute_deprecated __declspec(deprecated)
-#else
-#    define attribute_deprecated
-#endif
-
 /**
  * Disable warnings about deprecated features
  * This is useful for sections of code kept for backward compatibility and
diff -pruN csrc.orig/libavutil/cpu.h csrc/libavutil/cpu.h
--- csrc.orig/libavutil/cpu.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavutil/cpu.h	2018-10-03 08:33:18.418160332 +0200
@@ -90,7 +90,7 @@ void av_force_cpu_flags(int flags);
  * This function is mainly useful for testing.
  * Please use av_force_cpu_flags() and av_get_cpu_flags() instead which are more flexible
  */
-attribute_deprecated void av_set_cpu_flags_mask(int mask);
+void av_set_cpu_flags_mask(int mask);
 
 /**
  * Parse CPU flags from a string.
@@ -101,7 +101,6 @@ attribute_deprecated void av_set_cpu_fla
  * Please use av_parse_cpu_caps() when possible.
  * @return a combination of AV_CPU_* flags, negative on error.
  */
-attribute_deprecated
 int av_parse_cpu_flags(const char *s);
 
 /**
diff -pruN csrc.orig/libavutil/frame.h csrc/libavutil/frame.h
--- csrc.orig/libavutil/frame.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavutil/frame.h	2018-10-03 08:33:18.414160352 +0200
@@ -315,7 +315,6 @@ typedef struct AVFrame {
      * PTS copied from the AVPacket that was decoded to produce this frame.
      * @deprecated use the pts field instead
      */
-    attribute_deprecated
     int64_t pkt_pts;
 #endif
 
@@ -349,7 +348,6 @@ typedef struct AVFrame {
     /**
      * @deprecated unused
      */
-    attribute_deprecated
     uint64_t error[AV_NUM_DATA_POINTERS];
 #endif
 
@@ -535,18 +533,15 @@ typedef struct AVFrame {
     /**
      * QP table
      */
-    attribute_deprecated
     int8_t *qscale_table;
     /**
      * QP store stride
      */
-    attribute_deprecated
     int qstride;
 
-    attribute_deprecated
     int qscale_type;
 
-    attribute_deprecated
+    
     AVBufferRef *qp_table_buf;
 #endif
     /**
@@ -601,55 +596,55 @@ typedef struct AVFrame {
  * Accessors for some AVFrame fields. These used to be provided for ABI
  * compatibility, and do not need to be used anymore.
  */
-attribute_deprecated
+
 int64_t av_frame_get_best_effort_timestamp(const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_best_effort_timestamp(AVFrame *frame, int64_t val);
-attribute_deprecated
+
 int64_t av_frame_get_pkt_duration         (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_pkt_duration         (AVFrame *frame, int64_t val);
-attribute_deprecated
+
 int64_t av_frame_get_pkt_pos              (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_pkt_pos              (AVFrame *frame, int64_t val);
-attribute_deprecated
+
 int64_t av_frame_get_channel_layout       (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_channel_layout       (AVFrame *frame, int64_t val);
-attribute_deprecated
+
 int     av_frame_get_channels             (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_channels             (AVFrame *frame, int     val);
-attribute_deprecated
+
 int     av_frame_get_sample_rate          (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_sample_rate          (AVFrame *frame, int     val);
-attribute_deprecated
+
 AVDictionary *av_frame_get_metadata       (const AVFrame *frame);
-attribute_deprecated
+
 void          av_frame_set_metadata       (AVFrame *frame, AVDictionary *val);
-attribute_deprecated
+
 int     av_frame_get_decode_error_flags   (const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_decode_error_flags   (AVFrame *frame, int     val);
-attribute_deprecated
+
 int     av_frame_get_pkt_size(const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_pkt_size(AVFrame *frame, int val);
 #if FF_API_FRAME_QP
-attribute_deprecated
+
 int8_t *av_frame_get_qp_table(AVFrame *f, int *stride, int *type);
-attribute_deprecated
+
 int av_frame_set_qp_table(AVFrame *f, AVBufferRef *buf, int stride, int type);
 #endif
-attribute_deprecated
+
 enum AVColorSpace av_frame_get_colorspace(const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_colorspace(AVFrame *frame, enum AVColorSpace val);
-attribute_deprecated
+
 enum AVColorRange av_frame_get_color_range(const AVFrame *frame);
-attribute_deprecated
+
 void    av_frame_set_color_range(AVFrame *frame, enum AVColorRange val);
 #endif
 
diff -pruN csrc.orig/libavutil/pixdesc.h csrc/libavutil/pixdesc.h
--- csrc.orig/libavutil/pixdesc.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libavutil/pixdesc.h	2018-10-03 08:33:18.326160794 +0200
@@ -59,13 +59,13 @@ typedef struct AVComponentDescriptor {
 
 #if FF_API_PLUS1_MINUS1
     /** deprecated, use step instead */
-    attribute_deprecated int step_minus1;
+    int step_minus1;
 
     /** deprecated, use depth instead */
-    attribute_deprecated int depth_minus1;
+    int depth_minus1;
 
     /** deprecated, use offset instead */
-    attribute_deprecated int offset_plus1;
+    int offset_plus1;
 #endif
 } AVComponentDescriptor;
 
diff -pruN csrc.orig/libswscale/swscale.h csrc/libswscale/swscale.h
--- csrc.orig/libswscale/swscale.h	2018-09-15 10:41:10.000000000 +0200
+++ csrc/libswscale/swscale.h	2018-10-03 08:33:18.454160151 +0200
@@ -261,14 +261,14 @@ void sws_scaleVec(SwsVector *a, double s
 void sws_normalizeVec(SwsVector *a, double height);
 
 #if FF_API_SWS_VECTOR
-attribute_deprecated SwsVector *sws_getConstVec(double c, int length);
-attribute_deprecated SwsVector *sws_getIdentityVec(void);
-attribute_deprecated void sws_convVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_addVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_subVec(SwsVector *a, SwsVector *b);
-attribute_deprecated void sws_shiftVec(SwsVector *a, int shift);
-attribute_deprecated SwsVector *sws_cloneVec(SwsVector *a);
-attribute_deprecated void sws_printVec2(SwsVector *a, AVClass *log_ctx, int log_level);
+SwsVector *sws_getConstVec(double c, int length);
+SwsVector *sws_getIdentityVec(void);
+void sws_convVec(SwsVector *a, SwsVector *b);
+void sws_addVec(SwsVector *a, SwsVector *b);
+void sws_subVec(SwsVector *a, SwsVector *b);
+void sws_shiftVec(SwsVector *a, int shift);
+SwsVector *sws_cloneVec(SwsVector *a);
+void sws_printVec2(SwsVector *a, AVClass *log_ctx, int log_level);
 #endif
 
 void sws_freeVec(SwsVector *a);
